name: compile and release dash

on:
  push:
    branches: main

env:
  CARGO_TERM_COLOR: always

jobs:

  create-release:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: '1'
    
    - name: Generate Prerelease Release Notes
      run: |
        echo '| :warning: WARNING                                        |' >> ReleaseNotes.md
        echo '|:--------------------------------------------------------:|' >> ReleaseNotes.md
        echo '| This project is incomplete and may not work as expected. |' >> ReleaseNotes.md
        git log -"1" --format="- %H %s" | sed '/^$/d' >> ReleaseNotes.md

    - name: Delete Old Prerelease
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        tag_name: latest-commit
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish GitHub Release
      uses: ncipollo/release-action@v1.8.10
      with:
        prerelease: true
        bodyFile: ReleaseNotes.md
        tag: "latest-commit"
        token: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    
    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: '1'
    - name: Install Rust Nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        default: true
        override: true

    - name: Build
      run: cargo build --release
    
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/dash.exe
        asset_name: dash-windows-x86_64.exe
        tag: "latest-commit"
        overwrite: false
      
  build-linux:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: '1'
    - name: Install Rust Nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        default: true
        override: true

    - name: Build
      run: cargo build --release

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/dash
        asset_name: dash-linux-x86_64
        tag: "latest-commit"
        overwrite: false
    
  build-macos:

    runs-on: macos-latest

    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: '1'
    - name: Install Rust Nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target: x86_64-apple-darwin
        default: true
        override: true

    - name: Build
      run: cargo build --release

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/dash
        asset_name: dash-macos-x86_64
        tag: "latest-commit"
        overwrite: false
